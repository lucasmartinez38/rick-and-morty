{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./action-types\";\nconst initialState = {\n  myFavorites: [],\n  allCharactersFav: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ADD_FAV:\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: [...state.allCharactersFav, payload],\n        allCharactersFav: [...state.allCharactersFav, payload]\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(fav => fav.id !== payload)\n      };\n      return {\n        ...state,\n        myFavorites: payload,\n        allCharacters: payload\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: payload,\n        allCharacters: payload\n      };\n    case FILTER:\n      const allCharactersFiltered = state.allCharactersFav.filter(characters => characters.gender === payload);\n      return {\n        ...state,\n        myFavorites: payload === \"allCharacters\" ? [...state.allCharactersFav] : allCharactersFiltered\n      };\n    case ORDER:\n      const allCharactersFavCopy = [...state.allCharactersFav];\n      return {\n        ...state,\n        myFavorites: payload === \"A\" ? allCharactersFavCopy.sort((a, b) => a.id - b.id) : allCharactersFavCopy.sort((a, b) => b.id - a.id)\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","initialState","myFavorites","allCharactersFav","reducer","state","arguments","length","undefined","type","payload","filter","fav","id","allCharacters","allCharactersFiltered","characters","gender","allCharactersFavCopy","sort","a","b"],"sources":["C:/Users/lukit/Desktop/rick-and-morty/Client/src/redux/reduce.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./action-types\";\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n    allCharactersFav: [],\r\n}\r\n\r\n\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n      case ADD_FAV:\r\n      case ADD_FAV:\r\n        return {\r\n          ...state,\r\n          myFavorites: [...state.allCharactersFav, payload],\r\n          allCharactersFav: [...state.allCharactersFav, payload],\r\n        };\r\n\r\n      case REMOVE_FAV:\r\n        return {\r\n          ...state,\r\n          myFavorites: state.myFavorites.filter((fav) => fav.id !== payload),\r\n        };\r\n        return {\r\n          ...state,\r\n          myFavorites: payload,\r\n          allCharacters: payload,\r\n        };\r\n\r\n      case REMOVE_FAV:\r\n        return {\r\n          ...state,\r\n          myFavorites: payload,\r\n          allCharacters: payload,\r\n        };\r\n\r\n      case FILTER:\r\n        const allCharactersFiltered = state.allCharactersFav.filter(\r\n          (characters) => characters.gender === payload\r\n        );\r\n        return {\r\n          ...state,\r\n          myFavorites:\r\n            payload === \"allCharacters\"\r\n              ? [...state.allCharactersFav]\r\n              : allCharactersFiltered,\r\n        };\r\n\r\n      case ORDER:\r\n        const allCharactersFavCopy = [...state.allCharactersFav];\r\n        return {\r\n          ...state,\r\n          myFavorites:\r\n            payload === \"A\"\r\n              ? allCharactersFavCopy.sort((a, b) => a.id - b.id)\r\n              : allCharactersFavCopy.sort((a, b) => b.id - a.id),\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAQ,gBAAgB;AAEnE,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,gBAAgB,EAAE;AACtB,CAAC;AAID,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAA6C;EAAA,IAA5CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAE;IAAEQ,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpD,QAAQC,IAAI;IACV,KAAKZ,OAAO;IACZ,KAAKA,OAAO;MACV,OAAO;QACL,GAAGQ,KAAK;QACRH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,gBAAgB,EAAEO,OAAO,CAAC;QACjDP,gBAAgB,EAAE,CAAC,GAAGE,KAAK,CAACF,gBAAgB,EAAEO,OAAO;MACvD,CAAC;IAEH,KAAKZ,UAAU;MACb,OAAO;QACL,GAAGO,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACS,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKH,OAAO;MACnE,CAAC;MACD,OAAO;QACL,GAAGL,KAAK;QACRH,WAAW,EAAEQ,OAAO;QACpBI,aAAa,EAAEJ;MACjB,CAAC;IAEH,KAAKZ,UAAU;MACb,OAAO;QACL,GAAGO,KAAK;QACRH,WAAW,EAAEQ,OAAO;QACpBI,aAAa,EAAEJ;MACjB,CAAC;IAEH,KAAKX,MAAM;MACT,MAAMgB,qBAAqB,GAAGV,KAAK,CAACF,gBAAgB,CAACQ,MAAM,CACxDK,UAAU,IAAKA,UAAU,CAACC,MAAM,KAAKP,OAAO,CAC9C;MACD,OAAO;QACL,GAAGL,KAAK;QACRH,WAAW,EACTQ,OAAO,KAAK,eAAe,GACvB,CAAC,GAAGL,KAAK,CAACF,gBAAgB,CAAC,GAC3BY;MACR,CAAC;IAEH,KAAKf,KAAK;MACR,MAAMkB,oBAAoB,GAAG,CAAC,GAAGb,KAAK,CAACF,gBAAgB,CAAC;MACxD,OAAO;QACL,GAAGE,KAAK;QACRH,WAAW,EACTQ,OAAO,KAAK,GAAG,GACXQ,oBAAoB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACP,EAAE,GAAGQ,CAAC,CAACR,EAAE,CAAC,GAChDK,oBAAoB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACR,EAAE,GAAGO,CAAC,CAACP,EAAE;MACvD,CAAC;IACH;MACE,OAAO;QAAE,GAAGR;MAAM,CAAC;EAAC;AAG5B,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}